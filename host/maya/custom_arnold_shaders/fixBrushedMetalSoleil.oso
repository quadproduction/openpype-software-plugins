OpenShadingLanguage 1.00
# Compiled by oslc 1.12.0
# options: -o /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.oso.ceba-b5ee-64d1-3072.tmp -I/prod/softprod/apps/arnold/mtoa/5.1.1/linux/maya-2020/plug-ins/../bin/../osl/include
shader fixBrushedMetalSoleil
param	int	map_type	0		%meta{string,widget,"popup"} %meta{string,options,"Normal|Depth"}  %read{164,170} %write{2147483647,-1}
param	int	seed	0		%read{13,14} %write{2147483647,-1}
param	int	brush_rails	500		%read{43,43} %write{2147483647,-1}
param	float	line_width	0.00499999989		%read{65,100} %write{2147483647,-1}
param	float	line_depth_min	0.5		%read{119,121} %write{2147483647,-1}
param	float	line_depth_max	0.5		%read{119,173} %write{2147483647,-1}
param	float	line_length_min	1		%read{72,114} %write{2147483647,-1}
param	float	line_length_max	1		%read{72,112} %write{2147483647,-1}
param	float	density	0.200000003		%read{81,123} %write{2147483647,-1}
param	int	layers	10		%read{13,15} %write{2147483647,-1}
param	float	angle_jitter	0		%read{26,26} %write{2147483647,-1}
param	string	version	"1.3"		%read{2147483647,-1} %write{2147483647,-1}
oparam	color	Cout	0.5 0.5 1		%read{2147483647,-1} %write{169,175}
global	float	u	%read{0,0} %write{2147483647,-1}
global	float	v	%read{2,2} %write{2147483647,-1}
local	float	___339_local_density	%read{14,163} %write{14,163}
local	int	___341_i	%read{14,163} %write{14,163}
local	int	___341_id	%read{14,163} %write{14,163}
local	float	___342_len	%read{14,163} %write{14,163}
local	float	___345_frac	%read{14,163} %write{14,163}
local	float	___345_dfdv	%read{14,163} %write{14,163}
local	normal	___345_n	%read{14,163} %write{14,163}
local	float	___346_frac	%read{14,163} %write{14,163}
local	float	___347_thetaPeriod	%read{14,163} %write{14,163}
local	float	___347_pid	%read{14,163} %write{14,163}
local	float	___347_sr	%read{14,163} %write{14,163}
local	float	___347_dtheta	%read{14,163} %write{14,163}
local	float	___347_slit_v	%read{14,163} %write{14,163}
local	float	___347_slit_u	%read{14,163} %write{14,163}
local	float	___348_length	%read{14,163} %write{14,163}
local	float	___348_depth	%read{14,163} %write{14,163}
local	float	___349_centered_u	%read{2147483647,-1} %write{14,163}
local	float	___349_centered_v	%read{14,163} %write{14,163}
local	float	___350_c	%read{14,163} %write{14,163}
local	float	___350_s	%read{14,163} %write{14,163}
local	float	gu	%read{4,8} %write{1,1}
local	float	gv	%read{5,8} %write{3,3}
local	float	r	%read{14,163} %write{7,7}
local	float	theta	%read{14,163} %write{9,9}
local	normal	n	%read{14,167} %write{10,163}
local	float	d	%read{173,173} %write{11,163}
local	int	___351_layer_seed	%read{14,163} %write{13,163}
local	vector	___352_du	%read{14,163} %write{14,163}
local	vector	___352_dv	%read{14,163} %write{14,163}
local	float	___352_rnd_angle	%read{14,163} %write{14,163}
local	float	___352_rnd_twist	%read{14,163} %write{14,163}
local	float	___352_layer_theta	%read{14,163} %write{14,163}
const	int	$const1	2		%read{158,158} %write{2147483647,-1}
temp	float	$tmp1	%read{1,1} %write{0,0}
const	float	$const2	2		%read{0,137} %write{2147483647,-1}
const	int	$const3	1		%read{14,170} %write{2147483647,-1}
const	float	$const4	1		%read{1,174} %write{2147483647,-1}
temp	float	$tmp2	%read{3,3} %write{2,2}
temp	float	$tmp3	%read{6,6} %write{4,4}
temp	float	$tmp4	%read{6,6} %write{5,5}
temp	float	$tmp5	%read{7,7} %write{6,6}
temp	float	$tmp6	%read{9,9} %write{8,8}
const	float	$const5	3.14159274		%read{9,56} %write{2147483647,-1}
const	normal	$const6	0 0 1		%read{10,10} %write{2147483647,-1}
const	int	$const7	0		%read{11,164} %write{2147483647,-1}
temp	int	$tmp7	%read{14,163} %write{14,163}
temp	int	$tmp8	%read{14,163} %write{14,163}
temp	int	$tmp9	%read{14,163} %write{14,163}
temp	int	$tmp10	%read{12,163} %write{13,163}
temp	float	$tmp11	%read{14,163} %write{14,163}
temp	float	$tmp12	%read{14,163} %write{14,163}
temp	float	$tmp13	%read{14,163} %write{14,163}
const	float	$const8	0		%read{20,140} %write{2147483647,-1}
temp	float	$tmp14	%read{14,163} %write{14,163}
temp	float	$tmp15	%read{14,163} %write{14,163}
temp	float	$tmp16	%read{14,163} %write{14,163}
temp	float	$tmp17	%read{14,163} %write{14,163}
temp	float	$tmp18	%read{14,163} %write{14,163}
temp	float	$tmp19	%read{14,163} %write{14,163}
temp	float	$tmp20	%read{14,163} %write{14,163}
temp	float	$tmp21	%read{14,163} %write{14,163}
const	string	$const9	"mod"		%read{32,101} %write{2147483647,-1}
temp	float	$tmp22	%read{14,163} %write{14,163}
temp	float	$tmp23	%read{14,163} %write{14,163}
temp	float	$tmp24	%read{14,163} %write{14,163}
const	string	$const10	"rotate_uv"		%read{37,37} %write{2147483647,-1}
temp	float	$tmp25	%read{14,163} %write{14,163}
temp	int	$tmp26	%read{14,163} %write{14,163}
temp	float	$tmp27	%read{14,163} %write{14,163}
const	string	$const11	"slits_layer"		%read{44,44} %write{2147483647,-1}
temp	float	$tmp28	%read{14,163} %write{14,163}
const	string	$const12	"polar_id"		%read{47,47} %write{2147483647,-1}
temp	float	$tmp29	%read{14,163} %write{14,163}
temp	float	$tmp30	%read{14,163} %write{14,163}
temp	float	$tmp31	%read{14,163} %write{14,163}
temp	float	$tmp32	%read{14,163} %write{14,163}
temp	float	$tmp33	%read{14,163} %write{14,163}
const	float	$const13	0.5		%read{56,169} %write{2147483647,-1}
temp	float	$tmp34	%read{14,163} %write{14,163}
temp	int	$tmp35	%read{14,163} %write{14,163}
temp	int	$tmp36	%read{14,163} %write{14,163}
temp	float	$tmp37	%read{14,163} %write{14,163}
temp	float	$tmp38	%read{14,163} %write{14,163}
temp	float	$tmp39	%read{14,163} %write{14,163}
temp	float	$tmp40	%read{14,163} %write{14,163}
temp	float	$tmp41	%read{14,163} %write{14,163}
temp	int	$tmp42	%read{14,163} %write{14,163}
temp	int	$tmp43	%read{14,163} %write{14,163}
temp	int	$tmp44	%read{14,163} %write{14,163}
temp	float	$tmp45	%read{14,163} %write{14,163}
const	string	$const14	"line_length"		%read{70,110} %write{2147483647,-1}
temp	float	$tmp46	%read{14,163} %write{14,163}
temp	float	$tmp47	%read{14,163} %write{14,163}
temp	float	$tmp48	%read{14,163} %write{14,163}
temp	int	$tmp49	%read{14,163} %write{14,163}
temp	float	$tmp50	%read{14,163} %write{14,163}
temp	float	$tmp51	%read{14,163} %write{14,163}
temp	float	$tmp52	%read{14,163} %write{14,163}
const	string	$const15	"shifted_r"		%read{77,93} %write{2147483647,-1}
temp	float	$tmp53	%read{14,163} %write{14,163}
const	string	$const16	"filter_cells"		%read{80,122} %write{2147483647,-1}
temp	float	$tmp54	%read{14,163} %write{14,163}
temp	float	$tmp55	%read{14,163} %write{14,163}
temp	vector	$tmp56	%read{14,163} %write{14,163}
temp	float	$tmp57	%read{14,163} %write{14,163}
temp	float	$tmp58	%read{14,163} %write{14,163}
temp	int	$tmp59	%read{2147483647,-1} %write{14,163}
temp	float	$tmp60	%read{14,163} %write{14,163}
temp	float	$tmp61	%read{14,163} %write{14,163}
temp	float	$tmp62	%read{14,163} %write{14,163}
temp	float	$tmp63	%read{14,163} %write{14,163}
temp	float	$tmp64	%read{14,163} %write{14,163}
temp	float	$tmp65	%read{14,163} %write{14,163}
temp	float	$tmp66	%read{14,163} %write{14,163}
temp	float	$tmp67	%read{14,163} %write{14,163}
temp	float	$tmp68	%read{14,163} %write{14,163}
temp	int	$tmp69	%read{14,163} %write{14,163}
temp	float	$tmp70	%read{14,163} %write{14,163}
temp	float	$tmp71	%read{14,163} %write{14,163}
temp	float	$tmp72	%read{14,163} %write{14,163}
const	string	$const17	"line_depth"		%read{115,115} %write{2147483647,-1}
temp	float	$tmp73	%read{14,163} %write{14,163}
temp	vector	$tmp74	%read{14,163} %write{14,163}
temp	float	$tmp75	%read{14,163} %write{14,163}
temp	float	$tmp76	%read{14,163} %write{14,163}
temp	float	$tmp77	%read{14,163} %write{14,163}
temp	int	$tmp78	%read{14,163} %write{14,163}
temp	float	$tmp79	%read{14,163} %write{14,163}
temp	float	$tmp80	%read{14,163} %write{14,163}
temp	vector	$tmp81	%read{14,163} %write{14,163}
temp	float	$tmp82	%read{14,163} %write{14,163}
temp	float	$tmp83	%read{14,163} %write{14,163}
temp	float	$tmp84	%read{14,163} %write{14,163}
temp	float	$tmp85	%read{14,163} %write{14,163}
const	string	$const18	"x2_slit_normal"		%read{135,135} %write{2147483647,-1}
temp	float	$tmp86	%read{14,163} %write{14,163}
temp	float	$tmp87	%read{14,163} %write{14,163}
temp	float	$tmp88	%read{14,163} %write{14,163}
const	string	$const19	"x2_slit_depth"		%read{144,144} %write{2147483647,-1}
temp	float	$tmp89	%read{14,163} %write{14,163}
temp	float	$tmp90	%read{14,163} %write{14,163}
temp	float	$tmp91	%read{14,163} %write{14,163}
temp	vector	$tmp92	%read{14,163} %write{14,163}
temp	float	$tmp93	%read{14,163} %write{14,163}
temp	vector	$tmp94	%read{14,163} %write{14,163}
temp	vector	$tmp95	%read{14,163} %write{14,163}
temp	float	$tmp96	%read{14,163} %write{14,163}
const	vector	$const20	0 0 1		%read{159,159} %write{2147483647,-1}
temp	vector	$tmp98	%read{14,163} %write{14,163}
temp	int	$tmp99	%read{2147483647,-1} %write{14,163}
temp	int	$tmp100	%read{165,165} %write{164,164}
const	string	$const21	"normal_to_rgb"		%read{166,166} %write{2147483647,-1}
temp	color	$tmp101	%read{168,168} %write{167,167}
temp	color	$tmp102	%read{169,169} %write{168,168}
temp	int	$tmp103	%read{171,171} %write{170,170}
const	string	$const22	"depth_to_rgb"		%read{172,172} %write{2147483647,-1}
temp	float	$tmp104	%read{174,174} %write{173,173}
temp	float	$tmp105	%read{175,175} %write{174,174}
code ___main___
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:181
#     float gu = (2 * u - 1);
	mul		$tmp1 $const2 u 	%filename{"/prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl"} %line{181} %argrw{"wrr"}
	sub		gu $tmp1 $const4 	%argrw{"wrr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:182
#     float gv = (2 * v - 1);
	mul		$tmp2 $const2 v 	%line{182} %argrw{"wrr"}
	sub		gv $tmp2 $const4 	%argrw{"wrr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:184
#     float r = sqrt(gu * gu + gv * gv);
	mul		$tmp3 gu gu 	%line{184} %argrw{"wrr"}
	mul		$tmp4 gv gv 	%argrw{"wrr"}
	add		$tmp5 $tmp3 $tmp4 	%argrw{"wrr"}
	sqrt		r $tmp5 	%argrw{"wr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:185
#     float theta = atan2(gv, gu) + M_PI;
	atan2		$tmp6 gv gu 	%line{185} %argrw{"wrr"}
	add		theta $tmp6 $const5 	%argrw{"wrr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:186
#     normal n = normal(0, 0, 1);
	assign		n $const6 	%line{186} %argrw{"wr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:187
#     float d = 0;
	assign		d $const7 	%line{187} %argrw{"wr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:189
#     for (int layer_seed = seed * layers; layer_seed < (seed + 1) * layers; layer_seed++) {
	for		$tmp10 14 18 162 164 	%line{189} %argrw{"r"}
	mul		___351_layer_seed seed layers 	%argrw{"wrr"}
	add		$tmp7 seed $const3 	%argrw{"wrr"}
	mul		$tmp8 $tmp7 layers 	%argrw{"wrr"}
	lt		$tmp9 ___351_layer_seed $tmp8 	%argrw{"wrr"}
	neq		$tmp10 $tmp9 $const7 	%argrw{"wrr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:191
#         float rnd_angle = 2 * M_PI * cellnoise(layer_seed, 0);
	mul		$tmp11 $const2 $const5 	%line{191} %argrw{"wrr"}
	assign		$tmp13 ___351_layer_seed 	%argrw{"wr"}
	cellnoise	$tmp12 $tmp13 $const8 	%argrw{"wrr"}
	mul		___352_rnd_angle $tmp11 $tmp12 	%argrw{"wrr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:192
#         float rnd_twist = angle_jitter * (2 * cellnoise(layer_seed, 1) - 1);
	assign		$tmp15 ___351_layer_seed 	%line{192} %argrw{"wr"}
	cellnoise	$tmp14 $tmp15 $const4 	%argrw{"wrr"}
	mul		$tmp16 $const2 $tmp14 	%argrw{"wrr"}
	sub		$tmp17 $tmp16 $const4 	%argrw{"wrr"}
	mul		___352_rnd_twist angle_jitter $tmp17 	%argrw{"wrr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:193
#         float layer_theta = theta + rnd_angle + rnd_twist * log(r);
	add		$tmp18 theta ___352_rnd_angle 	%line{193} %argrw{"wrr"}
	log		$tmp19 r 	%argrw{"wr"}
	mul		$tmp20 ___352_rnd_twist $tmp19 	%argrw{"wrr"}
	add		___352_layer_theta $tmp18 $tmp20 	%argrw{"wrr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:194
#         layer_theta = mod(layer_theta, 2 * M_PI);
	mul		$tmp21 $const2 $const5 	%line{194} %argrw{"wrr"}
	functioncall	$const9 37 	%argrw{"r"}
# /prod/softprod/apps/arnold/mtoa/5.1.1/linux/maya-2020/plug-ins/../bin/../osl/include/stdosl.h:132
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp23 ___352_layer_theta $tmp21 	%filename{"/prod/softprod/apps/arnold/mtoa/5.1.1/linux/maya-2020/plug-ins/../bin/../osl/include/stdosl.h"} %line{132} %argrw{"wrr"}
	floor		$tmp22 $tmp23 	%argrw{"wr"}
	mul		$tmp24 $tmp21 $tmp22 	%argrw{"wrr"}
	sub		___352_layer_theta ___352_layer_theta $tmp24 	%argrw{"wrr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:195
#         rotate_uv(theta, du, dv);
	functioncall	$const10 43 	%filename{"/prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl"} %line{195} %argrw{"r"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:157
#     float c = cos(angle);
	cos		___350_c theta 	%line{157} %argrw{"wr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:158
#     float s = sin(angle);
	sin		___350_s theta 	%line{158} %argrw{"wr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:160
#     du = vector(c, s, 0);
	vector		___352_du ___350_c ___350_s $const8 	%line{160} %argrw{"wrrr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:161
#     dv = vector(-s, c, 0);
	neg		$tmp25 ___350_s 	%line{161} %argrw{"wr"}
	vector		___352_dv $tmp25 ___350_c $const8 	%argrw{"wrrr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:196
#         if (slits_layer(layer_seed,
	assign		$tmp27 brush_rails 	%line{196} %argrw{"wr"}
	functioncall	$const11 152 	%argrw{"r"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:128
#     float thetaPeriod = (2 * M_PI) / tRep;
	mul		$tmp28 $const2 $const5 	%line{128} %argrw{"wrr"}
	div		___347_thetaPeriod $tmp28 $tmp27 	%argrw{"wrr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:129
#     float pid = polar_id(seed, r, theta, thetaPeriod, width, length_min, length_max, density);
	functioncall	$const12 93 	%line{129} %argrw{"r"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:54
#     int i = int(floor(theta / angle_period));
	div		$tmp30 ___352_layer_theta ___347_thetaPeriod 	%line{54} %argrw{"wrr"}
	floor		$tmp29 $tmp30 	%argrw{"wr"}
	assign		___341_i $tmp29 	%argrw{"wr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:55
#     int id = i;
	assign		___341_id ___341_i 	%line{55} %argrw{"wr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:56
#     while (theta - i * angle_period < M_PI * .5
	while		$tmp44 53 69 92 92 	%line{56} %argrw{"r"}
	assign		$tmp32 ___341_i 	%argrw{"wr"}
	mul		$tmp31 $tmp32 ___347_thetaPeriod 	%argrw{"wrr"}
	sub		$tmp33 ___352_layer_theta $tmp31 	%argrw{"wrr"}
	mul		$tmp34 $const5 $const13 	%argrw{"wrr"}
	lt		$tmp35 $tmp33 $tmp34 	%argrw{"wrr"}
	neq		$tmp36 $tmp35 $const7 	%argrw{"wrr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:57
#            && r * sin(theta - i * angle_period) < width) {
	if		$tmp36 68 68 	%line{57} %argrw{"r"}
	assign		$tmp39 ___341_i 	%argrw{"wr"}
	mul		$tmp38 $tmp39 ___347_thetaPeriod 	%argrw{"wrr"}
	sub		$tmp40 ___352_layer_theta $tmp38 	%argrw{"wrr"}
	sin		$tmp37 $tmp40 	%argrw{"wr"}
	mul		$tmp41 r $tmp37 	%argrw{"wrr"}
	lt		$tmp42 $tmp41 line_width 	%argrw{"wrr"}
	neq		$tmp43 $tmp42 $const7 	%argrw{"wrr"}
	assign		$tmp36 $tmp43 	%argrw{"wr"}
	neq		$tmp44 $tmp36 $const7 	%argrw{"wrr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:58
#         float len = line_length(length_min, length_max, i);
	assign		$tmp45 ___341_i 	%line{58} %argrw{"wr"}
	functioncall	$const14 75 	%argrw{"r"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:12
#     return cellnoise(pid, 1) * (length_max - length_min) + length_min;
	cellnoise	$tmp46 $tmp45 $const4 	%line{12} %argrw{"wrr"}
	sub		$tmp47 line_length_max line_length_min 	%argrw{"wrr"}
	mul		$tmp48 $tmp46 $tmp47 	%argrw{"wrr"}
	add		___342_len $tmp48 line_length_min 	%argrw{"wrr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:59
#         if (filter_cells(seed, i, shifted_r(i, r), len, density))
	assign		$tmp50 ___341_i 	%line{59} %argrw{"wr"}
	assign		$tmp52 ___341_i 	%argrw{"wr"}
	functioncall	$const15 80 	%argrw{"r"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:38
#     return r + cellnoise(pid);    
	cellnoise	$tmp53 $tmp52 	%line{38} %argrw{"wr"}
	add		$tmp51 r $tmp53 	%argrw{"wrr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:59
#         if (filter_cells(seed, i, shifted_r(i, r), len, density))
	functioncall	$const16 88 	%line{59} %argrw{"r"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:28
#     float local_density = density * r * r;
	mul		$tmp54 density $tmp51 	%line{28} %argrw{"wrr"}
	mul		___339_local_density $tmp54 $tmp51 	%argrw{"wrr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:30
#     return float(cellnoise(vector(seed, pid, r / line_length))) < local_density;
	assign		$tmp57 ___351_layer_seed 	%line{30} %argrw{"wr"}
	div		$tmp58 $tmp51 ___342_len 	%argrw{"wrr"}
	vector		$tmp56 $tmp57 $tmp50 $tmp58 	%argrw{"wrrr"}
	cellnoise	$tmp55 $tmp56 	%argrw{"wr"}
	lt		$tmp49 $tmp55 ___339_local_density 	%argrw{"wrr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:59
#         if (filter_cells(seed, i, shifted_r(i, r), len, density))
	if		$tmp49 90 90 	%line{59} %argrw{"r"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:60
#             id = i;
	assign		___341_id ___341_i 	%line{60} %argrw{"wr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:61
#         i--;
	assign		$tmp59 ___341_i 	%line{61} %argrw{"wr"}
	sub		___341_i ___341_i $const3 	%argrw{"wrr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:64
#     return id;
	assign		___347_pid ___341_id 	%line{64} %argrw{"wr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:130
#     float sr = shifted_r(pid, r);
	functioncall	$const15 96 	%line{130} %argrw{"r"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:38
#     return r + cellnoise(pid);    
	cellnoise	$tmp60 ___347_pid 	%line{38} %argrw{"wr"}
	add		___347_sr r $tmp60 	%argrw{"wrr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:132
#     float dtheta = theta - pid * thetaPeriod;
	mul		$tmp61 ___347_pid ___347_thetaPeriod 	%line{132} %argrw{"wrr"}
	sub		___347_dtheta ___352_layer_theta $tmp61 	%argrw{"wrr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:134
#     float slit_v = sin(dtheta) * r / width;
	sin		$tmp62 ___347_dtheta 	%line{134} %argrw{"wr"}
	mul		$tmp63 $tmp62 r 	%argrw{"wrr"}
	div		___347_slit_v $tmp63 line_width 	%argrw{"wrr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:135
#     float slit_u = mod(sr, 1);
	functioncall	$const9 106 	%line{135} %argrw{"r"}
# /prod/softprod/apps/arnold/mtoa/5.1.1/linux/maya-2020/plug-ins/../bin/../osl/include/stdosl.h:132
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp65 ___347_sr $const4 	%filename{"/prod/softprod/apps/arnold/mtoa/5.1.1/linux/maya-2020/plug-ins/../bin/../osl/include/stdosl.h"} %line{132} %argrw{"wrr"}
	floor		$tmp64 $tmp65 	%argrw{"wr"}
	mul		$tmp66 $const4 $tmp64 	%argrw{"wrr"}
	sub		___347_slit_u ___347_sr $tmp66 	%argrw{"wrr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:137
#     if (abs(slit_v - .5) < .5) {
	sub		$tmp68 ___347_slit_v $const13 	%filename{"/prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl"} %line{137} %argrw{"wrr"}
	abs		$tmp67 $tmp68 	%argrw{"wr"}
	lt		$tmp69 $tmp67 $const13 	%argrw{"wrr"}
	if		$tmp69 151 151 	%argrw{"r"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:138
#         float length = line_length(length_min, length_max, pid);
	functioncall	$const14 115 	%line{138} %argrw{"r"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:12
#     return cellnoise(pid, 1) * (length_max - length_min) + length_min;
	cellnoise	$tmp70 ___347_pid $const4 	%line{12} %argrw{"wrr"}
	sub		$tmp71 line_length_max line_length_min 	%argrw{"wrr"}
	mul		$tmp72 $tmp70 $tmp71 	%argrw{"wrr"}
	add		___348_length $tmp72 line_length_min 	%argrw{"wrr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:139
#         float depth = line_depth(depth_min, depth_max, pid, sr, seed);
	functioncall	$const17 122 	%line{139} %argrw{"r"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:20
#     return cellnoise(vector(pid, rid, layer_seed)) * (depth_max - depth_min) + depth_min;
	assign		$tmp75 ___351_layer_seed 	%line{20} %argrw{"wr"}
	vector		$tmp74 ___347_pid ___347_sr $tmp75 	%argrw{"wrrr"}
	cellnoise	$tmp73 $tmp74 	%argrw{"wr"}
	sub		$tmp76 line_depth_max line_depth_min 	%argrw{"wrr"}
	mul		$tmp77 $tmp73 $tmp76 	%argrw{"wrr"}
	add		___348_depth $tmp77 line_depth_min 	%argrw{"wrr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:140
#         if (filter_cells(seed, pid, sr, length, density)) {
	functioncall	$const16 130 	%line{140} %argrw{"r"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:28
#     float local_density = density * r * r;
	mul		$tmp79 density ___347_sr 	%line{28} %argrw{"wrr"}
	mul		___339_local_density $tmp79 ___347_sr 	%argrw{"wrr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:30
#     return float(cellnoise(vector(seed, pid, r / line_length))) < local_density;
	assign		$tmp82 ___351_layer_seed 	%line{30} %argrw{"wr"}
	div		$tmp83 ___347_sr ___348_length 	%argrw{"wrr"}
	vector		$tmp81 $tmp82 ___347_pid $tmp83 	%argrw{"wrrr"}
	cellnoise	$tmp80 $tmp81 	%argrw{"wr"}
	lt		$tmp78 $tmp80 ___339_local_density 	%argrw{"wrr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:140
#         if (filter_cells(seed, pid, sr, length, density)) {
	if		$tmp78 151 151 	%line{140} %argrw{"r"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:141
#             float centered_u = 2 * slit_u - 1;
	mul		$tmp84 $const2 ___347_slit_u 	%line{141} %argrw{"wrr"}
	sub		___349_centered_u $tmp84 $const4 	%argrw{"wrr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:142
#             float centered_v = 2 * slit_v - 1;
	mul		$tmp85 $const2 ___347_slit_v 	%line{142} %argrw{"wrr"}
	sub		___349_centered_v $tmp85 $const4 	%argrw{"wrr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:143
#             n = x2_slit_normal(centered_u, centered_v, 1, depth);
	functioncall	$const18 144 	%line{143} %argrw{"r"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:88
#     float frac = v / l0;
	div		___345_frac ___349_centered_v $const4 	%line{88} %argrw{"wrr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:89
#     float dfdv = 2 * d0 * frac;
	mul		$tmp86 $const2 ___348_depth 	%line{89} %argrw{"wrr"}
	mul		___345_dfdv $tmp86 ___345_frac 	%argrw{"wrr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:91
#     normal n = normal(0, -dfdv, 1);
	neg		$tmp87 ___345_dfdv 	%line{91} %argrw{"wr"}
	normal		___345_n $const8 $tmp87 $const4 	%argrw{"wrrr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:93
#     n /= length(n);
	length		$tmp88 ___345_n 	%line{93} %argrw{"wr"}
	div		___345_n ___345_n $tmp88 	%argrw{"wrr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:94
#     return n;
	assign		n ___345_n 	%line{94} %argrw{"wr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:144
#             d = x2_slit_depth(centered_u, centered_v, 1, depth);
	functioncall	$const19 149 	%line{144} %argrw{"r"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:104
#     float frac = v / l0;
	div		___346_frac ___349_centered_v $const4 	%line{104} %argrw{"wrr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:105
#     return (frac * frac - 1) * d0;
	mul		$tmp89 ___346_frac ___346_frac 	%line{105} %argrw{"wrr"}
	sub		$tmp90 $tmp89 $const4 	%argrw{"wrr"}
	mul		d $tmp90 ___348_depth 	%argrw{"wrr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:145
#             return 1;
	assign		$tmp26 $const3 	%line{145} %argrw{"wr"}
	return
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:149
#     return 0;
	assign		$tmp26 $const7 	%line{149} %argrw{"wr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:196
#         if (slits_layer(layer_seed,
	if		$tmp26 162 162 	%line{196} %argrw{"r"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:209
#             n = n[0] * du + n[1] * dv + n[2] * vector(0, 0, 1);
	compref		$tmp91 n $const7 	%line{209} %argrw{"wrr"}
	mul		$tmp92 $tmp91 ___352_du 	%argrw{"wrr"}
	compref		$tmp93 n $const3 	%argrw{"wrr"}
	mul		$tmp94 $tmp93 ___352_dv 	%argrw{"wrr"}
	add		$tmp95 $tmp92 $tmp94 	%argrw{"wrr"}
	compref		$tmp96 n $const1 	%argrw{"wrr"}
	mul		$tmp98 $tmp96 $const20 	%argrw{"wrr"}
	add		n $tmp95 $tmp98 	%argrw{"wrr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:210
#             break;
	break	%line{210}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:189
#     for (int layer_seed = seed * layers; layer_seed < (seed + 1) * layers; layer_seed++) {
	assign		$tmp99 ___351_layer_seed 	%line{189} %argrw{"wr"}
	add		___351_layer_seed ___351_layer_seed $const3 	%argrw{"wrr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:214
#     if (map_type == 0) {
	eq		$tmp100 map_type $const7 	%line{214} %argrw{"wrr"}
	if		$tmp100 170 176 	%argrw{"r"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:215
#         Cout = normal_to_rgb(n);
	functioncall	$const21 170 	%line{215} %argrw{"r"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:71
#     return .5 + .5 * color(n);
	assign		$tmp101 n 	%line{71} %argrw{"wr"}
	mul		$tmp102 $const13 $tmp101 	%argrw{"wrr"}
	add		Cout $const13 $tmp102 	%argrw{"wrr"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:216
#     } else if (map_type == 1) {
	eq		$tmp103 map_type $const3 	%line{216} %argrw{"wrr"}
	if		$tmp103 176 176 	%argrw{"r"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:217
#         Cout = depth_to_rgb(d, line_depth_max);
	functioncall	$const22 176 	%line{217} %argrw{"r"}
# /prod/studio/pipeline-dev/arnold/fixBrushedMetalSoleil.osl:78
#     return color(1 + d / depth_max);
	div		$tmp104 d line_depth_max 	%line{78} %argrw{"wrr"}
	add		$tmp105 $const4 $tmp104 	%argrw{"wrr"}
	assign		Cout $tmp105 	%argrw{"wr"}
	end
