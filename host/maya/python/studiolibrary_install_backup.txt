# Copyright 2017 by Kurt Rathjen. All Rights Reserved.
#
# This library is free software: you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation, either
# version 3 of the License, or (at your option) any later version.
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
# You should have received a copy of the GNU Lesser General Public
# License along with this library. If not, see <http://www.gnu.org/licenses/>.
"""
Drag and drop for Maya 2018+
"""
import os
import sys


try:
    import maya.mel
    import maya.cmds
    isMaya = True
except ImportError:
    isMaya = False


plugin_name = "Studio Library"
plugin_version = "2.13.2"
plugin_fullname = "{} v{}".format(plugin_name, plugin_version)


def onMayaDroppedPythonFile(*args, **kwargs):
    """This function is only supported since Maya 2017 Update 3"""
    pass


def _onMayaDropped():
    """Dragging and dropping this file into the scene executes the file."""

    srcPath = os.path.join(os.path.dirname(__file__), 'src')
    iconPath = os.path.join(srcPath, 'studiolibrary', 'resource', 'icons', 'icon.png')

    srcPath = os.path.normpath(srcPath)
    iconPath = os.path.normpath(iconPath)

    if not os.path.exists(iconPath):
        raise IOError('Cannot find ' + iconPath)

    for path in sys.path:
        if os.path.exists(path + '/studiolibrary/__init__.py'):
            maya.cmds.warning('Studio Library is already installed at ' + path)

    shelf_name = "Animation"
    shelf_layout = maya.mel.eval('$gShelfTopLevel=$gShelfTopLevel')
    shelf_layout_fullpath = maya.cmds.tabLayout(shelf_layout, query=True, fullPathName=True)
    shelves = maya.cmds.tabLayout(shelf_layout, query=True, childArray=True)

    add_shelf_icon = True
    if shelf_name in shelves:
        shelf_fullname = "{}|{}".format(shelf_layout_fullpath, shelf_name)
        shelf_elems = maya.cmds.shelfLayout(shelf_fullname, query=True, childArray=True)

        for shelf_elem in shelf_elems:
            shelf_elem_fullname = "{}|{}".format(shelf_fullname, shelf_elem)

            if not maya.cmds.objectTypeUI(shelf_elem, isType="shelfButton"):
                continue

            # Already a shelf button with this name
            if maya.cmds.shelfButton(shelf_elem_fullname, query=True, label=True) == plugin_name:
                if maya.cmds.shelfButton(shelf_elem_fullname, query=True, annotation=True) != plugin_fullname:
                    # Not the right version, remove it
                    maya.cmds.deleteUI(shelf_elem_fullname, control=True)
                else:
                    add_shelf_icon = False
            elif maya.cmds.shelfButton(shelf_elem_fullname, query=True, annotation=True) == plugin_name:
                # Old install, remove it
                maya.cmds.deleteUI(shelf_elem_fullname, control=True)

        # If we don't have t add the icon we can return
        if not add_shelf_icon:
            return

        command = '''
# -----------------------------------
# Studio Library
# www.studiolibrary.com
# -----------------------------------

import os
import sys

if not os.path.exists(r'{path}'):
    raise IOError(r'The source path "{path}" does not exist!')

if r'{path}' not in sys.path:
    sys.path.insert(0, r'{path}')

import studiolibrary
studiolibrary.main()
'''.format(path=srcPath)

        maya.cmds.shelfButton(label=plugin_name,
            command=command,
            annotation=plugin_fullname,
            sourceType="Python",
            image=iconPath,
            image1=iconPath,
            parent=shelf_fullname
        )


if isMaya:
    _onMayaDropped()