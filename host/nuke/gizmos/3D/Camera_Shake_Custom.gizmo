#! /prod/softprod/apps/nuke/10.0v5/linux/libnuke-10.0.5.so -nx
version 10.0 v5
Gizmo {
 help "Camera Shake\n\nAdd different frequency on all Transform knobs to add a random Camera Shake.\n\nReplace Input by CheckerBoard to preview the animation faster.\n\nCreate a Transform Node that have all knobs linked to the Camera Shake node.\n"
 knobChanged "node = nuke.thisNode()\nknob = nuke.thisKnob()\n\nif knob.name() in ('splitoption', 'showPanel'):\n    mode = node\['splitoption'].value()\n    if mode == 'Same for all':\n        node\['amplitude'].setVisible(True) #\n        node\['amplitudexy'].setVisible(False)\n        node\['splitamplitude'].setVisible(False)\n        node\['scaling'].setVisible(True) #\n        node\['scalingxy'].setVisible(False)\n        node\['splitscale'].setVisible(False)\n        node\['frequencyall'].setVisible(True) #\n        node\['frequencytx'].setVisible(False)\n        node\['frequencyty'].setVisible(False)\n        node\['frequencyr'].setVisible(False)\n        node\['frequencysx'].setVisible(False)\n        node\['frequencysy'].setVisible(False)\n        node\['octavesall'].setVisible(True) #\n        node\['octavestx'].setVisible(False)\n        node\['octavesty'].setVisible(False)\n        node\['octavesr'].setVisible(False)\n        node\['octavessx'].setVisible(False)\n        node\['octavessy'].setVisible(False)\n        node\['seedall'].setVisible(True) #\n        node\['seedtx'].setVisible(False)\n        node\['seedty'].setVisible(False)\n        node\['seedr'].setVisible(False)\n        node\['seedsx'].setVisible(False)\n        node\['seedsy'].setVisible(False)\n        node\['randomize_seedall'].setVisible(True) #\n        node\['randomize_seedtx'].setVisible(False)\n        node\['randomize_seedty'].setVisible(False)\n        node\['randomize_seedr'].setVisible(False)\n        node\['randomize_seedsx'].setVisible(False)\n        node\['randomize_seedsy'].setVisible(False)\n        node\['divt'].setVisible(False)\n        node\['divr'].setVisible(False)\n        node\['divs'].setVisible(False)\n        node\['divtx'].setVisible(False)\n        node\['divty'].setVisible(False)\n        node\['divtxy'].setVisible(False)\n        node\['divtxy1'].setVisible(False)\n        node\['divsx'].setVisible(False)\n        node\['divsy'].setVisible(False)\n        node\['divsxy'].setVisible(False)\n        node\['S01'].setVisible(True) #\n        node\['S02'].setVisible(True)\n        node\['S03'].setVisible(True)\n        node\['S13'].setVisible(True)\n        node\['S11'].setVisible(False)\n        node\['S12'].setVisible(False)\n        node\['splitamplitude'].setValue(None)\n        node\['splitscale'].setValue(None)\n\n    elif mode != 'Same for all':\n        node\['amplitude'].setVisible(False) #\n        node\['amplitudexy'].setVisible(True)\n        node\['splitamplitude'].setVisible(True)\n        node\['scaling'].setVisible(False) #\n        node\['scalingxy'].setVisible(True)\n        node\['splitscale'].setVisible(True)\n        node\['frequencyall'].setVisible(False) #\n        node\['frequencytx'].setVisible(True)\n        node\['frequencyr'].setVisible(True)\n        node\['frequencysx'].setVisible(True)\n        node\['octavesall'].setVisible(False) #\n        node\['octavestx'].setVisible(True)\n        node\['octavesr'].setVisible(True)\n        node\['octavessx'].setVisible(True)\n        node\['seedall'].setVisible(False)#\n        node\['seedtx'].setVisible(True)\n        node\['seedr'].setVisible(True)\n        node\['seedsx'].setVisible(True)\n        node\['randomize_seedall'].setVisible(False)#\n        node\['randomize_seedtx'].setVisible(True)\n        node\['randomize_seedr'].setVisible(True)\n        node\['randomize_seedsx'].setVisible(True)\n        node\['divt'].setVisible(True)\n        node\['divtxy'].setVisible(True)\n        node\['divtxy1'].setVisible(True)\n        node\['divr'].setVisible(True)\n        node\['divs'].setVisible(True)\n        node\['divsxy'].setVisible(True)\n        node\['S01'].setVisible(False) #\n        node\['S02'].setVisible(False)\n        node\['S03'].setVisible(False)\n        node\['S13'].setVisible(False)\n        node\['S11'].setVisible(True)\n        node\['S12'].setVisible(True)\n\nif knob.name() in ('splitamplitude', 'showPanel'):\n            mode = node\['splitamplitude'].value()\n            if mode == 'None':\n                node\['divtx'].setVisible(False)\n                node\['divty'].setVisible(False)\n                node\['frequencyty'].setVisible(False)\n                node\['octavesty'].setVisible(False)\n                node\['seedty'].setVisible(False)\n                node\['randomize_seedty'].setVisible(False)\n            elif mode != 'None':\n                node\['divtx'].setVisible(True)\n                node\['divty'].setVisible(True)\n                node\['frequencyty'].setVisible(True)\n                node\['octavesty'].setVisible(True)\n                node\['seedty'].setVisible(True)\n                node\['randomize_seedty'].setVisible(True)\n\nif knob.name() in ('splitscale', 'showPanel'):\n            mode = node\['splitscale'].value()\n            if mode == 'None':\n                node\['divsx'].setVisible(False)\n                node\['divsy'].setVisible(False)\n                node\['frequencysy'].setVisible(False)\n                node\['octavessy'].setVisible(False)\n                node\['seedsy'].setVisible(False)\n                node\['randomize_seedsy'].setVisible(False)\n            elif mode != 'None':\n                node\['divsx'].setVisible(True)\n                node\['divsy'].setVisible(True)\n                node\['frequencysy'].setVisible(True)\n                node\['octavessy'].setVisible(True)\n                node\['seedsy'].setVisible(True)\n                node\['randomize_seedsy'].setVisible(True)"
 tile_color 0x9c0000ff
 note_font Verdana
 addUserKnob {20 CameraShake l "Camera Shake C"}
 addUserKnob {6 same l INVISIBLE +INVISIBLE +STARTLINE}
 same {{"!\[value name].splitoption"}}
 addUserKnob {14 amplitude l "<font color=\"white\">Amplitude" t "Size of the shake, in pixels." R 0 100}
 addUserKnob {14 amplitudexy l "<font color=\"white\">Amplitude" t "Size of the shake, in pixels." +HIDDEN R 0 100}
 amplitudexy {0 0}
 addUserKnob {7 amplitudex l "Amplitude X" t "Size of the shake, in pixels." +HIDDEN R 0 100}
 addUserKnob {26 divtx l "@b; X" +HIDDEN}
 addUserKnob {7 frequencytx l "<font color=\"grey\">Frequency" t "Lowest frequency of the shake, in cycles per frame." +HIDDEN}
 frequencytx 0.5
 addUserKnob {3 octavestx l "<font color=\"grey\">Octaves" t "Add higher frequency shaking to the basic shake (make it more like Brownian motion)." +HIDDEN}
 octavestx 1
 addUserKnob {3 seedtx l "<font color=\"grey\">Offset" t "Choose a different offset value to produce a different sequence for the camera shake transform." +HIDDEN}
 addUserKnob {22 randomize_seedtx l " Random Offset " t "Press this button to set a random offset value." -STARTLINE +HIDDEN T "import random\nnuke.thisNode().knob('seedtx').setValue( random.randint(1,16384) )"}
 addUserKnob {26 divty l "@b; Y" +HIDDEN}
 addUserKnob {7 amplitudey l "Amplitude Y" t "Size of the shake, in pixels." +HIDDEN R 0 100}
 addUserKnob {7 frequencyty l "<font color=\"grey\">Frequency" t "Lowest frequency of the shake, in cycles per frame." +HIDDEN}
 frequencyty 0.5
 addUserKnob {3 octavesty l "<font color=\"grey\">Octaves" t "Add higher frequency shaking to the basic shake (make it more like Brownian motion)." +HIDDEN}
 octavesty 1
 addUserKnob {3 seedty l "<font color=\"grey\">Offset" t "Choose a different offset value to produce a different sequence for the camera shake transform." +HIDDEN}
 addUserKnob {22 randomize_seedty l " Random Offset " t "Press this button to set a random offset value." -STARTLINE +HIDDEN T "import random\nnuke.thisNode().knob('seedty').setValue( random.randint(1,16384) )"}
 addUserKnob {26 divtxy l " " +HIDDEN}
 addUserKnob {26 divtxy1 l " " +HIDDEN T " "}
 addUserKnob {4 splitamplitude l "<font color=\"grey\">Split XY (Frequency, Octave, Seed)" t "None: \nFrequency, Octaves and Offset get the same value for X and Y amplitude curve.\n\nSplit XY:\nGive a different value of Frequency, Octaves and Offset for X and Y amplitude curve." -STARTLINE +HIDDEN M {None "Split XY" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" ""}}
 addUserKnob {6 sameamp l INVISIBLE +INVISIBLE +STARTLINE}
 sameamp {{"!\[value name].splitamplitude"}}
 addUserKnob {26 divt l "" +STARTLINE +HIDDEN}
 addUserKnob {26 S12 l "" +STARTLINE +HIDDEN T " "}
 addUserKnob {7 rotation l "<font color=\"white\">Rotation" t "Maximum rotation about the center, in degrees." R 0 15}
 addUserKnob {7 frequencyr l "<font color=\"grey\">Frequency" t "Lowest frequency of the shake, in cycles per frame." +HIDDEN}
 frequencyr 0.5
 addUserKnob {3 octavesr l "<font color=\"grey\">Octaves" t "Add higher frequency shaking to the basic shake (make it more like Brownian motion)." +HIDDEN}
 octavesr 1
 addUserKnob {3 seedr l "<font color=\"grey\">Offset" t "Choose a different offset value to produce a different sequence for the camera shake transform." +HIDDEN}
 addUserKnob {22 randomize_seedr l " Random Offset " t "Press this button to set a random offset value." -STARTLINE +HIDDEN T "import random\nnuke.thisNode().knob('seedr').setValue( random.randint(1,16384) )"}
 addUserKnob {26 S11 l " " +HIDDEN T " "}
 addUserKnob {26 divr l "" +STARTLINE +HIDDEN}
 addUserKnob {26 S13 l " " T "  "}
 addUserKnob {14 scaling l "<font color=\"white\">Scaling" t "Size of the scale of the shake, in pixels." R 0 100}
 addUserKnob {14 scalingxy l "   <font color=\"white\">Scaling" t "Size of the scale of the shake, in pixels." +HIDDEN R 0 100}
 addUserKnob {26 divsx l "@b; X" +HIDDEN}
 addUserKnob {7 frequencysx l "<font color=\"grey\">Frequency" t "Lowest frequency of the shake, in cycles per frame." +HIDDEN}
 frequencysx 0.5
 addUserKnob {3 octavessx l "<font color=\"grey\">Octaves" t "Add higher frequency shaking to the basic shake (make it more like Brownian motion)." +HIDDEN}
 octavessx 1
 addUserKnob {3 seedsx l "<font color=\"grey\">Offset" t "Choose a different offset value to produce a different sequence for the camera shake transform." +HIDDEN}
 addUserKnob {22 randomize_seedsx l " Random Offset " t "Press this button to set a random offset value." -STARTLINE +HIDDEN T "import random\nnuke.thisNode().knob('seedsx').setValue( random.randint(1,16384) )"}
 addUserKnob {26 divsy l "@b; Y" +HIDDEN}
 addUserKnob {7 frequencysy l "<font color=\"grey\">Frequency" t "Lowest frequency of the shake, in cycles per frame." +HIDDEN}
 frequencysy 0.5
 addUserKnob {3 octavessy l "<font color=\"grey\">Octaves" t "Add higher frequency shaking to the basic shake (make it more like Brownian motion)." +HIDDEN}
 octavessy 1
 addUserKnob {3 seedsy l "<font color=\"grey\">Offset" t "Choose a different offset value to produce a different sequence for the camera shake transform." +HIDDEN}
 addUserKnob {22 randomize_seedsy l " Random Offset " t "Press this button to set a random offset value." -STARTLINE +HIDDEN T "import random\nnuke.thisNode().knob('seedsy').setValue( random.randint(1,16384) )"}
 addUserKnob {26 divsxy l " " +HIDDEN}
 addUserKnob {26 divsxy1 l " " T ""}
 addUserKnob {4 splitscale l "<font color=\"grey\">Split XY (Frequency, Octave, Seed)" t "None: \nFrequency, Octaves and Offset get the same value for X and Y scaling curve.\n\nSplit XY:\nGive a different value of Frequency, Octaves and Offset for X and Y scaling curve." -STARTLINE +HIDDEN M {None "Split XY" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" ""}}
 addUserKnob {6 samescale l INVISIBLE +INVISIBLE +STARTLINE}
 samescale {{"!\[value name].splitscale"}}
 addUserKnob {26 divs l "" +STARTLINE +HIDDEN}
 addUserKnob {26 S03 l " " T " "}
 addUserKnob {12 Center_Ref l "<font color=\"white\">Center"}
 Center_Ref {1024 576}
 addUserKnob {26 S01 l " " T " "}
 addUserKnob {26 ""}
 addUserKnob {7 frequencyall l "<font color=\"grey\">Frequency" t "Lowest frequency of the shake, in cycles per frame."}
 frequencyall 0.05
 addUserKnob {3 octavesall l "<font color=\"grey\">Octaves" t "Add higher frequency shaking to the basic shake (make it more like Brownian motion)."}
 octavesall 1
 addUserKnob {3 seedall l "<font color=\"grey\">Offset" t "Choose a different offset value to produce a different sequence for the camera shake transform."}
 addUserKnob {22 randomize_seedall l " Random Offset " t "Press this button to set a random offset value." -STARTLINE T "import random\nnuke.thisNode().knob('seedall').setValue( random.randint(1,16384) )"}
 addUserKnob {26 S02 l " " T " "}
 addUserKnob {7 mix l Mix t "Mix all animation curve. (Multiply curves with this value)\n"}
 mix 1
 addUserKnob {26 ""}
 addUserKnob {7 scale l "          Fixed Scale" t "Extra scale to prevent the edges of the image from entering frame." R 1 1.2}
 scale 1
 addUserKnob {26 ""}
 addUserKnob {20 options l Options n 1}
 addUserKnob {4 splitoption l "@b;<font color=\"green\">Frequency" t "Same for all: \nFrequency, Octaves and Offset get the same value for each curve (Amplitude, Rotation, Scaling)\n\nSplit for each:\nGive a different value of Frequency, Octaves and Offset for each curve." M {"Same for all" "Split for each" "" "" "" ""}}
 addUserKnob {26 exp l "     " -STARTLINE T "<font color=\"grey\">(Amplitude, Rotation, Scaling)"}
 addUserKnob {26 S00 l " " T " "}
 addUserKnob {6 preview l "<font color = \"grey\">_ Replace Input by CheckerBoard" t "Replace Input by a CheckerBoard.\nUsefull to preview the animation mostly if the Input is a heavy process." -STARTLINE}
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {26 S4 l " " T " "}
 addUserKnob {20 tresult l "Result (Transform)" n 1}
 addUserKnob {26 S5 l " " T " "}
 addUserKnob {41 translate l Translate T Transform.translate}
 addUserKnob {41 rotate l Rotate T Transform.rotate}
 addUserKnob {41 scale_1 l Scale T Transform.scale}
 addUserKnob {41 center l Center T Transform.center}
 addUserKnob {41 invert_matrix l invert T Transform.invert_matrix}
 addUserKnob {41 filter l Filter T Transform.filter}
 addUserKnob {41 clamp l Clamp -STARTLINE T Transform.clamp}
 addUserKnob {41 black_outside l "Black Outside" t "Crop the image to have black outside of the frame." -STARTLINE T Transform.black_outside}
 addUserKnob {41 motionblur l MotionBlur T Transform.motionblur}
 addUserKnob {41 shutter l Shutter T Transform.shutter}
 addUserKnob {41 shutteroffset l Shutteroffset T Transform.shutteroffset}
 addUserKnob {41 shuttercustomoffset l "" -STARTLINE T Transform.shuttercustomoffset}
 addUserKnob {26 S14 l " " T " "}
 addUserKnob {22 createt l "<font color = \"CornflowerBlue\"> Create Transform (Linked)" t "Create a Transform node that have all knobs linked to the Camera Shake node." T "groupNode = nuke.thisNode()\nname = groupNode.name()\n\nNT = nuke.createNode(\"Transform\", inpanel=False )\nNT\['translate'].setExpression(name + \".translate\")\nNT\['rotate'].setExpression(name + \".rotate\")\nNT\['scale'].setExpression(name + \".scale_1\")\nNT\['center'].setExpression(name + \".center\")\nNT\['invert_matrix'].setExpression(name + \".invert_matrix\")\nNT\['filter'].setExpression(name + \".filter\")\nNT\['clamp'].setExpression(name + \".clamp\")\nNT\['black_outside'].setExpression(name + \".black_outside\")\nNT\['motionblur'].setExpression(name + \".motionblur\")\nNT\['shutter'].setExpression(name + \".shutter\")\nNT\['shutteroffset'].setExpression(name + \".shutteroffset\")\nNT\['shuttercustomoffset'].setExpression(name + \".shuttercustomoffset\")\nNT\['label'].setValue(\"(\" +name + \")\")\nNT\['tile_color'].setValue(0x9c0000ff)\nNT.setSelected(True)\n\nnuke.nodeCopy('%clipboard%')\n\nn = nuke.selectedNode()\nnuke.delete(n)\n\nnuke.selectAll() \nnuke.invertSelection()\n\nnodePos = ( nuke.thisNode().xpos(), nuke.thisNode().ypos()) \n\ngroupNode.end()\n\nfor node in nuke.allNodes():\n    node.setSelected(False)\n\nnuke.nodePaste('%clipboard%')\n\ngroupNode.setSelected(False)\n\nnodesToPlace = sorted( nuke.selectedNodes(), key=lambda node: node.ypos())\n\nfor index,node in enumerate(nodesToPlace):\n    node.setXYpos(nodePos\[0]+100, nodePos\[1])" +STARTLINE}
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 by2 l " " T "                                                                                               "}
 addUserKnob {26 CGEV l " " t "\nEn cas de probleme, contacter Gaetan Baldy sur le chat\n" -STARTLINE T "<font color=\"#1C1C1C\"> v02 - CGEV - 2016"}
 addUserKnob {1 output l INVISIBLE +INVISIBLE}
 output "\[if \{\[value preview]==\"false\"\} \{return \"\[knob this.name2 \"2D\"]\"\} \{return \"\[knob this.name2 \"On Checker\"]\"\}]\[value name2]"
 addUserKnob {1 name2 l INVISIBLE +INVISIBLE}
 name2 2D
}
 Input {
  inputs 0
  name Input
  xpos 110
  ypos -32
 }
set N5c20d50 [stack 0]
 NoOp {
  name Format
  xpos -94
  ypos -32
  hide_input true
  addUserKnob {20 User}
  addUserKnob {14 format R 0 100}
  format {{format.h} {format.w}}
 }
 CheckerBoard2 {
  inputs 0
  format "2048 2048 0 0 2048 2048 1 square_2K"
  name CheckerBoard1
  xpos -93
  postage_stamp false
 }
set N58adfa0 [stack 0]
 Reformat {
  name Reformat2
  xpos -203
 }
 Group {
  name Crop_Plus
  help "@b; dCrop v2@n; for Nuke 6.0v3\n\nProvides options to crop a input by box, percentage, bbox or a aspect ratio relative to the input.\n\nCreated by Diogo Girondi\ndiogogirondi@gmail.com"
  knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() in ('mode', 'showPanel'):\n    mode = n\['mode'].value()\n    n\['text'].setVisible(False)\n    if mode == 'Custom Box':\n        n\['cbox'].setVisible(True)\n        n\['left'].setVisible(False)\n        n\['right'].setVisible(False)\n        n\['bottom'].setVisible(False)\n        n\['top'].setVisible(False)\n        n\['cbbox'].setVisible(False)\n        n\['ar_selection'].setVisible(False)\n        n\['ar_custom'].setVisible(False)\n        n\['offset'].setVisible(False)\n    elif mode == 'BBox':\n        n\['cbox'].setVisible(False)\n        n\['left'].setVisible(False)\n        n\['right'].setVisible(False)\n        n\['bottom'].setVisible(False)\n        n\['top'].setVisible(False)\n        n\['cbbox'].setVisible(True)\n        n\['ar_selection'].setVisible(False)\n        n\['ar_custom'].setVisible(False)\n        n\['offset'].setVisible(False)\n    elif mode == 'Percentage':\n        n\['cbox'].setVisible(False)\n        n\['left'].setVisible(True)\n        n\['right'].setVisible(True)\n        n\['bottom'].setVisible(True)\n        n\['top'].setVisible(True)\n        n\['cbbox'].setVisible(False)\n        n\['ar_selection'].setVisible(False)\n        n\['ar_custom'].setVisible(False)\n        n\['offset'].setVisible(False)\n    elif mode == 'Aspect Ratio':\n        n\['cbox'].setVisible(False)\n        n\['left'].setVisible(False)\n        n\['right'].setVisible(False)\n        n\['bottom'].setVisible(False)\n        n\['top'].setVisible(False)\n        n\['cbbox'].setVisible(False)\n        n\['ar_selection'].setVisible(True)\n        if n\['ar_selection'].value() == 'Custom':\n            n\['ar_custom'].setVisible(True)\n        else:\n            n\['ar_custom'].setVisible(False)\n        if n\['ar_selection'].value() == 'Input       ':\n            n\['offset'].setEnabled(False)\n        else:\n            n\['offset'].setEnabled(True)\n        n\['offset'].setVisible(True)\n    elif mode == 'Input':\n        n\['cbox'].setVisible(False)\n        n\['left'].setVisible(False)\n        n\['right'].setVisible(False)\n        n\['bottom'].setVisible(False)\n        n\['top'].setVisible(False)\n        n\['cbbox'].setVisible(False)\n        n\['ar_selection'].setVisible(False)\n        n\['ar_custom'].setVisible(False)\n        n\['offset'].setVisible(False)\n        n\['text'].setVisible(True)\n\nif k.name() in ('ar_selection', 'showPanel'):\n    aspect = n\['ar_selection'].value()\n    if aspect == 'Custom':\n        n\['ar_custom'].setVisible(True)\n    else:\n        n\['ar_custom'].setVisible(False)\n    if aspect == 'Input       ':\n        n\['offset'].setEnabled(False)\n    else:\n        n\['offset'].setEnabled(True)\n\nif k.name() == 'reformat':\n    reformat = n\['reformat'].value()\n    if reformat == True:\n        n\['crop'].setValue(False)\n    else:\n        n\['crop'].setValue(True)"
  tile_color 0xa57aaaff
  xpos -203
  ypos 26
  addUserKnob {20 dcrop l Crop}
  addUserKnob {4 mode l Mode M {Input "Custom Box" BBox Percentage "Aspect Ratio" "" "" "" ""}}
  addUserKnob {26 ""}
  addUserKnob {26 text l "" +STARTLINE T "Crop area based on the input image."}
  addUserKnob {15 cbox l Box +HIDDEN}
  cbox {0 0 2048 1152}
  addUserKnob {26 cbbox l "" +STARTLINE +HIDDEN T "Crop area based on the input BBox."}
  addUserKnob {7 left l L +HIDDEN R 0 100}
  addUserKnob {7 right l R +HIDDEN R 0 100}
  addUserKnob {7 bottom l B +HIDDEN R 0 100}
  addUserKnob {7 top l T +HIDDEN R 0 100}
  addUserKnob {4 ar_selection l Aspect +HIDDEN M {"Input       " 1.00 1.19 1.25 1.33 1.35 1.37 1.43 1.50 1.56 1.60 1.66 1.75 1.778 1.85 2.00 2.20 2.35 2.40 2.55 2.59 2.76 4.00 Custom ""}}
  addUserKnob {7 ar_custom l " " -STARTLINE +HIDDEN R 0 4}
  ar_custom 1
  addUserKnob {7 offset l Offset +DISABLED +HIDDEN R -100 100}
  addUserKnob {26 ""}
  addUserKnob {14 softness l Softness R 0 100}
  addUserKnob {1 output l INVISIBLE +INVISIBLE}
  output "\[value this.mode]"
  addUserKnob {6 reformat +STARTLINE}
  addUserKnob {6 intersect -STARTLINE}
  addUserKnob {6 crop l "black outside" -STARTLINE}
  crop true
 }
  Input {
   inputs 0
   name Input
   xpos 81
   ypos 139
  }
set N578f0f0 [stack 0]
  NoOp {
   name Aspect
   tile_color 0xff005fff
   gl_color 0xff005fff
   label Math
   xpos 240
   ypos 199
   addUserKnob {20 ar_math l "Aspect Ratio Math"}
   addUserKnob {7 input_ar R 0 4}
   input_ar {{(input.width*input.pixel_aspect)/input.height}}
   addUserKnob {7 custom_ar R 0 4}
   custom_ar {{"parent.ar_selection==0?this.input_ar:parent.ar_selection==23?parent.ar_custom:\[value ar_selection]"}}
   addUserKnob {6 ar_isBigger +STARTLINE}
   ar_isBigger {{this.input_ar>=this.custom_ar}}
   addUserKnob {26 ""}
   addUserKnob {12 ar_area}
   ar_area {{ar_isBigger?((input.height*this.custom_ar)/input.pixel_aspect):input.width} {ar_isBigger?input.height:((input.width*input.pixel_aspect)/this.custom_ar)}}
   addUserKnob {12 ar_pos}
   ar_pos {{((input.width-this.ar_area.x)/2)*(parent.offset/100)} {((input.height-this.ar_area.y)/2)*(parent.offset/100)}}
   addUserKnob {15 ar}
   ar {{ar_isBigger?this.ar_pos.x+((input.width/2)-(((input.height*this.custom_ar)/input.pixel_aspect)/2)):0} {ar_isBigger?0:this.ar_pos.y+((input.height/2)-(((input.width*input.pixel_aspect)/this.custom_ar)/2))} {ar_isBigger?this.ar_pos.x+((input.width/2)+(((input.height*this.custom_ar)/input.pixel_aspect)/2)):input.width} {ar_isBigger?input.height:this.ar_pos.y+((input.height/2)+(((input.width*input.pixel_aspect)/this.custom_ar)/2))}}
  }
  Crop {
   box {{parent.Aspect.ar.main i} {parent.Aspect.ar.main i} {parent.Aspect.ar.main i} {parent.Aspect.ar.main i}}
   softness {{parent.softness.w i} {parent.softness.h i}}
   reformat {{parent.reformat i}}
   intersect {{parent.intersect i}}
   crop {{parent.crop i}}
   name AspectRatio
   label Crop
   xpos 240
   ypos 244
  }
push $N578f0f0
  Crop {
   box {{"width * ( parent.left / 100 )"} {"height * ( parent.bottom / 100 )"} {"width - ( width * ( parent.right / 100 ) )"} {"height - ( height * ( parent.top / 100 ) )"}}
   softness {{parent.softness.w} {parent.softness.h}}
   reformat {{parent.reformat}}
   intersect {{parent.intersect}}
   crop {{parent.crop}}
   name Percentage
   label Crop
   xpos 125
   ypos 246
  }
push $N578f0f0
  Crop {
   box {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
   softness {{parent.softness.w} {parent.softness.h}}
   reformat {{parent.reformat}}
   intersect {{parent.intersect}}
   crop {{parent.crop}}
   name BBox
   label Crop
   xpos 15
   ypos 246
  }
push $N578f0f0
  Crop {
   box {{parent.cbox.x} {parent.cbox.y} {parent.cbox.r} {parent.cbox.t}}
   softness {{parent.softness.w} {parent.softness.h}}
   reformat {{parent.reformat}}
   intersect {{parent.intersect}}
   crop {{parent.crop}}
   name Box
   label Crop
   selected true
   xpos -95
   ypos 246
  }
push $N578f0f0
  Crop {
   box {0 0 {input.width} {input.height}}
   softness {{parent.softness.w} {parent.softness.h}}
   reformat {{parent.reformat}}
   intersect {{parent.intersect}}
   crop {{parent.crop}}
   name Input_
   xpos -207
   ypos 248
  }
  Switch {
   inputs 5
   which {{parent.mode i}}
   name Mode
   xpos 80
   ypos 349
  }
  Output {
   name Output1
   xpos 80
   ypos 469
  }
  NoOp {
   inputs 0
   name Aspect1
   tile_color 0xff005fff
   gl_color 0xff005fff
   label Math
   xpos 637
   ypos 228
   addUserKnob {20 ar_math l "Aspect Ratio Math"}
   addUserKnob {7 input_ar R 0 4}
   input_ar {{(input.width*input.pixel_aspect)/input.height}}
   addUserKnob {7 custom_ar R 0 4}
   custom_ar {{"parent.ar_selection==0?this.input_ar:parent.ar_selection==23?parent.ar_custom:\[value ar_selection]"}}
   addUserKnob {6 ar_isBigger +STARTLINE}
   ar_isBigger {{this.input_ar>this.custom_ar}}
   addUserKnob {26 ""}
   addUserKnob {12 teste}
   addUserKnob {12 ar_pos}
   ar_pos {{this.ar_isBigger?parent.offset*(width/100):0} {this.ar_isBigger?0:parent.offset*(width/100)}}
   addUserKnob {15 ar}
   ar {{"this.custom_ar > this.input_ar ? 0 + ar_pos.x :  ( ( width / 2 ) - ( ( ( height * custom_ar ) / pixel_aspect ) / 2 ) ) + ar_pos.x"} {"this.custom_ar < this.input_ar ? 0 + ar_pos.y : ( ( height / 2 ) - ( ( ( width * pixel_aspect ) / custom_ar ) / 2 ) ) + ar_pos.y"} {"this.custom_ar > this.input_ar ? width + ar_pos.x : ( ( width / 2 ) + ( ( ( height * custom_ar ) / pixel_aspect ) / 2 ) ) + ar_pos.x"} {"this.custom_ar < this.input_ar ? height + ar_pos.y : ( ( height / 2 ) + ( ( ( width * pixel_aspect ) / custom_ar ) / 2 ) ) + ar_pos.y"}}
  }
 end_group
 Dot {
  name Dot1
  xpos -169
  ypos 139
 }
push $N5c20d50
push $N58adfa0
 Reformat {
  type "to box"
  box_width {{parent.Format.format.w i}}
  box_height {{parent.Format.format.h i}}
  box_fixed true
  black_outside true
  pbb true
  name Reformat1
  xpos -93
  ypos 26
 }
push $N5c20d50
 Switch {
  inputs 2
  which {{parent.preview}}
  name Preview
  xpos 17
  ypos 26
 }
 CopyBBox {
  inputs 2
  name CopyBBox1
  xpos 110
  ypos 82
 }
 Switch {
  inputs 2
  which {{parent.preview}}
  name NoInput
  xpos 110
  ypos 135
  disable {{"\[exists parent.input]"}}
 }
 Transform {
  translate {{"same==1 ? ((fBm((seedall+frame)*frequencyall,2.5,3.5,octavesall,2,.5)*amplitude.w)*parent.mix) : (sameamp==1 ? ((fBm((seedtx+frame)*frequencytx,2.5,3.5,octavestx,2,.5)*amplitudexy)*parent.mix) : ((fBm((seedtx+frame)*frequencytx,2.5,3.5,octavestx,2,.5)*amplitudexy)*parent.mix))"} {"same==1 ? ((fBm((seedall+frame)*frequencyall,2.5,3.5,octavesall,2,.5)*amplitude.h)*parent.mix) :  (sameamp==1 ? ((fBm((seedtx+frame)*frequencytx,2.5,3.5,octavestx,2,.5)*amplitudexy)*parent.mix) : ((fBm((seedty+frame)*frequencyty,2.5,3.5,octavesty,2,.5)*amplitudexy)*parent.mix))"}}
  rotate {{"same==1 ? ((fBm((seedall+frame)*frequencyall,20.5,21.5,octavesall,2,.5)*rotation)*parent.mix) : ((fBm((seedr+frame)*frequencyr,20.5,21.5,octavesr,2,.5)*rotation)*parent.mix)"}}
  scale {{"same==1 ? ((fBm((seedall+frame)*frequencyall,30.5,31.5,octavesall,2,.5)*scaling.w)*parent.mix+parent.scale) : (samescale==1 ? ((fBm((seedsx+frame)*frequencysx,30.5,31.5,octavessx,2,.5)*scalingxy)*parent.mix+parent.scale) : ((fBm((seedsx+frame)*frequencysx,30.5,31.5,octavessx,2,.5)*scalingxy)*parent.mix+parent.scale))"} {"same==1 ? ((fBm((seedall+frame)*frequencyall,30.5,31.5,octavesall,2,.5)*scaling.h)*parent.mix+parent.scale) : (samescale==1 ? ((fBm((seedsy+frame)*frequencysy,30.5,31.5,octavessy,2,.5)*scalingxy)*parent.mix+parent.scale) : ((fBm((seedsy+frame)*frequencysy,30.5,31.5,octavessy,2,.5)*scalingxy)*parent.mix+parent.scale))"}}
  center {{parent.Center_Ref} {parent.Center_Ref}}
  black_outside false
  motionblur 1
  shutteroffset centred
  name Transform
  label "\[python nuke.thisNode().input(0).name()]"
  xpos 110
  ypos 186
 }
 Output {
  name FranklinVFX
  xpos 110
  ypos 253
 }
end_group
